apiVersion: apps/v1
kind: Deployment
metadata:
  name: python-app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: python-app
  template:
    metadata:
      labels:
        app: python-app
    spec:
     containers:
        - name: python-app
          image: "069653090426.dkr.ecr.ap-south-1.amazonaws.com/my-python-app:1.0.0-20241220172145"
          ports:
            - containerPort: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: python-app-service
  namespace: default
spec:
  selector:
    app: python-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
  type: ClusterIP  # Kubernetes internal service type
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: python-app-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/scheme: "internet-facing"
    alb.ingress.kubernetes.io/target-type: "ip"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
spec:
  rules:
  - host: display.triconlabs.com  # ALB URL or custom domain
    http:
      paths:
      - path: /  # Match the path
        pathType: Prefix
        backend:
          service:
            name: python-app-service  # Ensure the service name matches the one in the cluster
            port:
              number: 80
